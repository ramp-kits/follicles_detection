"""
Set data aside in folder hidden_data

Usage
-----
$ python preprocessing_scripts/reserve_hidden_data.py

Folder structure:

```
# expected inputs
data/
    couptes_jpg/
        xxx.jpg
        ...
    labels.csv

# generated by this program:
hidden_data/
    couptes_jpg/
        xxx.jpg
        ...
    labels.csv
```

"""
import os
import glob
import shutil

import pandas as pd

DATA_FOLDER = "data"
HIDDEN_DATA_FOLDER = "hidden_data"
OVARY_NUMBERS_TO_HIDE = [
    # available data: ovary number from 1 to 7 included
    7,
]

labels_path = os.path.join(DATA_FOLDER, "labels.csv")
hidden_labels_path = os.path.join(HIDDEN_DATA_FOLDER, "labels.csv")
images_folder = os.path.join(DATA_FOLDER, "coupes_jpg")
hidden_images_folder = os.path.join(HIDDEN_DATA_FOLDER, "coupes_jpg")


def load_all_labels():
    all_labels = pd.read_csv(labels_path)
    try:
        all_labels = all_labels.append(pd.read_csv(hidden_labels_path))
    except FileNotFoundError:
        pass
    return all_labels


def split_hidden_labels(labels):
    ovary_number = labels["filename"].str.extract(r"D-1M0(\d)-\d.jpg").astype(int)
    is_hidden = ovary_number.isin(OVARY_NUMBERS_TO_HIDE).values
    shown_labels = labels.loc[~is_hidden, :]
    hidden_labels = labels.loc[is_hidden, :]
    print("\nLabels in shown data:")
    print(shown_labels["class"].value_counts())
    print("\nLabels in hidden data:")
    print(hidden_labels["class"].value_counts())

    assert not shown_labels.empty
    assert not hidden_labels.empty
    return shown_labels, hidden_labels


def move_images(from_folder, to_folder, only_files=None):
    source = glob.glob(os.path.join(from_folder, "*.jpg"))
    for filename in source:
        basename = os.path.basename(filename)
        if (only_files is None) or (basename in only_files):
            shutil.move(filename, os.path.join(to_folder, basename))


def main():
    os.makedirs(hidden_images_folder, exist_ok=True)

    all_labels = load_all_labels()
    shown_labels, hidden_labels = split_hidden_labels(all_labels)
    shown_labels.to_csv(labels_path, index=False)
    hidden_labels.to_csv(hidden_labels_path, index=False)

    move_images(hidden_images_folder, images_folder)
    move_images(
        images_folder,
        hidden_images_folder,
        only_files=hidden_labels["filename"].unique(),
    )


if __name__ == "__main__":
    main()
